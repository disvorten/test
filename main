import requests
import click
import xml.etree.ElementTree as ET
import unittest

from requests import HTTPError


def currency_rates(code, date):
    value, name = None, None
    url = 'https://www.cbr.ru/scripts/XML_daily.asp'
    try:
        response = requests.get(f'{url}?date_req={date}')
        response.raise_for_status()
    except HTTPError as http_err:
        return -1, http_err
    except Exception as err:
        return -1, err
    resp_xml_content = response.content.decode('windows-1251')
    root_node = ET.fromstring(resp_xml_content)
    for tag in root_node.findall('Valute'):
        if tag[1].text == code:
            value = tag[-1].text
            name = tag[-2].text
    if not value:
        return -3, 0
    return value, name

def Change_date(date):
    mas = date.split('-')
    new_date = mas[-1]
    for i in range(2, len(mas) + 1):
        new_date = f'{new_date}/{mas[-i]}'
    return new_date

@click.command()
@click.option('--code')
@click.option('--date')
def main(code, date):
    new_date  = Change_date(date)
    result = currency_rates(code, new_date)
    if result[0] == -1:
        print(f'HTTP error occurred: {result[1]}')
    elif result[0] == -2:
        print(f'Other error occurred: {result[1]}')
    elif result[0] == -3:
        print(f'Incorrect name of code')
    else:
        print(f"{code} ({result[1]}): {result[0]}")


if __name__ == '__main__':
    main()

class Test(unittest.TestCase):
    def test_change_data(self):
        answer = '2022/10/08'
        incoming_data = '2022-10-08'
        self.assertEqual(answer, Change_date(incoming_data))

    def test_main_process(self):
        answer = ('61,2475', 'Доллар США')
        incoming_data = {'code': 'USD', 'data': Change_date('2022-10-08')}
        self.assertEqual(answer, currency_rates(incoming_data['code'], incoming_data['data']))
